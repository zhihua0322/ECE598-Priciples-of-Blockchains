{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5","program":"/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itoa","/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=75f16d3da4c6fe38","-C","extra-filename=-75f16d3da4c6fe38","--out-dir","/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","-L","dependency=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libitoa-75f16d3da4c6fe38.rmeta"},"prelude":{"crate_id":{"name":"itoa","disambiguator":[13349908726436750550,4012735354949149462]},"crate_root":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src","external_crates":[{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}}],"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":0,"byte_end":11363,"line_start":1,"line_end":345,"column_start":1,"column_end":62}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":0,"byte_end":11363,"line_start":1,"line_end":345,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":19},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":53},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":57},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":61},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":65},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":69},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":73},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":113},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":117},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":133},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":137},{"krate":0,"index":48}],"decl_id":null,"docs":" This crate provides fast functions for printing integer primitives to an\n [`io::Write`] or a [`fmt::Write`]. The implementation comes straight from\n [libcore] but avoids the performance penalty of going through\n [`fmt::Formatter`].","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":1626,"byte_end":1632,"line_start":52,"line_end":52,"column_start":35,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2364,"byte_end":2367,"line_start":82,"line_end":82,"column_start":8,"column_end":11},"name":"fmt","qualname":"::fmt","value":"fn <W, V> (mut wr: W, value: V) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write integer to an `fmt::Write`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2347,"byte_end":2356,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2732,"byte_end":2738,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" A safe API for formatting integers to text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3143,"byte_end":3146,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3097,"byte_end":3106,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3111,"byte_end":3131,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3379,"byte_end":3385,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <I> (&mut self, i: I) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print an integer into this buffer and return a reference to its string representation\n within the buffer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3552,"byte_end":3558,"line_start":135,"line_end":135,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3728,"byte_end":3735,"line_start":141,"line_end":141,"column_start":11,"column_end":18},"name":"Integer","qualname":"::Integer","value":"Integer: private::Sealed","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" An integer that can be formatted by `itoa::write` and `itoa::fmt`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3804,"byte_end":3809,"line_start":144,"line_end":144,"column_start":8,"column_end":13},"name":"write","qualname":"::Integer::write","value":"fn (self, buf: &mut Buffer) -> &str","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2792,"byte_end":2798,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2890,"byte_end":2896,"line_start":108,"line_end":108,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2979,"byte_end":2985,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2792,"byte_end":2798,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2890,"byte_end":2896,"line_start":108,"line_end":108,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":2979,"byte_end":2985,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.5/src/lib.rs","byte_start":3746,"byte_end":3752,"line_start":141,"line_end":141,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":32}}]}