{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2","program":"/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","spin","/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=040c468862a3dc79","-C","extra-filename=-040c468862a3dc79","--out-dir","/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","-L","dependency=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libspin-040c468862a3dc79.rmeta"},"prelude":{"crate_id":{"name":"spin","disambiguator":[10801073916862552965,10436228768976440743]},"crate_root":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src","external_crates":[{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}}],"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":0,"byte_end":243,"line_start":1,"line_end":18,"column_start":1,"column_end":10}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":169,"byte_end":170,"line_start":12,"line_end":12,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":169,"byte_end":170,"line_start":12,"line_end":12,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":169,"byte_end":170,"line_start":12,"line_end":12,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":0,"byte_end":243,"line_start":1,"line_end":18,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":74},{"krate":0,"index":165}],"decl_id":null,"docs":" Synchronization primitives based on spinning\n","sig":null,"attributes":[{"value":"crate_type = \"lib\"","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"warn(missing_docs)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":23,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/lib.rs","byte_start":97,"byte_end":107,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":1903,"byte_end":1908,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" This type provides MUTual EXclusion based on spinning.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2124,"byte_end":2134,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" A guard to which the protected data can be accessed","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2745,"byte_end":2748,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (user_data: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new spinlock wrapping the supplied data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2981,"byte_end":2991,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":4025,"byte_end":4029,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the spinlock and returns a guard.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":4548,"byte_end":4560,"line_start":173,"line_end":173,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<Mutex<T>>::force_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force unlock the spinlock.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":4768,"byte_end":4776,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to lock the mutex. If it is already locked, it will return None. Otherwise it returns\n a guard within Some.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":12439,"byte_end":12445,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rw_lock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":12792,"byte_end":12807,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rw_lock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" A guard from which the protected data can be read","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13033,"byte_end":13049,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rw_lock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"decl_id":null,"docs":" A guard to which the protected data can be written","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13604,"byte_end":13626,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"RwLockUpgradeableGuard","qualname":"::rw_lock::RwLockUpgradeableGuard","value":"RwLockUpgradeableGuard {  }","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" A guard from which the protected data can be read, and can be upgraded\n to a writable guard if needed","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14329,"byte_end":14332,"line_start":126,"line_end":126,"column_start":18,"column_end":21},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (user_data: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new spinlock wrapping the supplied data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14302,"byte_end":14311,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14569,"byte_end":14579,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `RwLock`, returning the underlying data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14548,"byte_end":14557,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":15696,"byte_end":15700,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":15675,"byte_end":15684,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":16817,"byte_end":16825,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":16796,"byte_end":16805,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":17829,"byte_end":17849,"line_start":222,"line_end":222,"column_start":19,"column_end":39},"name":"force_read_decrement","qualname":"<RwLock<T>>::force_read_decrement","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force decrement the reader count.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":17801,"byte_end":17810,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":18379,"byte_end":18397,"line_start":234,"line_end":234,"column_start":19,"column_end":37},"name":"force_write_unlock","qualname":"<RwLock<T>>::force_write_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force unlock exclusive write access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":18351,"byte_end":18360,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":19769,"byte_end":19774,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Lock this rwlock with exclusive write access, blocking the current\n thread until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":19748,"byte_end":19757,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":20659,"byte_end":20668,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to lock this rwlock with exclusive write access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":20638,"byte_end":20647,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":20987,"byte_end":21003,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"upgradeable_read","qualname":"<RwLock<T>>::upgradeable_read","value":"fn (&self) -> RwLockUpgradeableGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a readable lock guard that can later be upgraded to a writable lock guard.\n Upgrades can be done through the [`RwLockUpgradeableGuard::upgrade`](RwLockUpgradeableGuard::upgrade) method.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":20966,"byte_end":20975,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":21294,"byte_end":21314,"line_start":327,"line_end":327,"column_start":12,"column_end":32},"name":"try_upgradeable_read","qualname":"<RwLock<T>>::try_upgradeable_read","value":"fn (&self) -> Option<RwLockUpgradeableGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to obtain an upgradeable lock guard.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":21273,"byte_end":21282,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":23460,"byte_end":23467,"line_start":397,"line_end":397,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<RwLockUpgradeableGuard>::upgrade","value":"fn (mut self) -> RwLockWriteGuard<'rwlock, T>","parent":null,"children":[],"decl_id":null,"docs":" Upgrades an upgradeable lock guard to a writable lock guard.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":23439,"byte_end":23448,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":24188,"byte_end":24199,"line_start":420,"line_end":420,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<RwLockUpgradeableGuard>::try_upgrade","value":"fn (self) -> Result<RwLockWriteGuard<'rwlock, T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to upgrade an upgradeable lock guard to a writable lock guard.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":24167,"byte_end":24176,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":24838,"byte_end":24847,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockUpgradeableGuard>::downgrade","value":"fn (self) -> RwLockReadGuard<'rwlock, T>","parent":null,"children":[],"decl_id":null,"docs":" Downgrades the upgradeable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":24305,"byte_end":24314,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":25673,"byte_end":25682,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"fn (self) -> RwLockReadGuard<'rwlock, T>","parent":null,"children":[],"decl_id":null,"docs":" Downgrades the writable lock guard to a readable, shared lock guard. Cannot fail and is guaranteed not to spin.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":25652,"byte_end":25661,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":34525,"byte_end":34529,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time global\n initialization. Unlike its std equivalent, this is generalized so that the\n closure returns a value and it is stored. Once therefore acts something like\n a future, too.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35507,"byte_end":35511,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"name":"INIT","qualname":"::once::Once::<T>::INIT","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Initialization constant of `Once`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35670,"byte_end":35673,"line_start":59,"line_end":59,"column_start":18,"column_end":21},"name":"new","qualname":"<Once<T>>::new","value":"fn () -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":36850,"byte_end":36859,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once<T>>::call_once","value":"fn <'a, F> (&'a self, builder: F) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":38262,"byte_end":38265,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"try","qualname":"<Once<T>>::try","value":"fn <'a> (&'a self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer iff the `Once` was previously initialized\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":38548,"byte_end":38552,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"wait","qualname":"<Once<T>>::wait","value":"fn <'a> (&'a self) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Like try, but will spin if the `Once` is in the process of being\n initialized\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2289,"byte_end":2294,"line_start":89,"line_end":89,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2340,"byte_end":2345,"line_start":90,"line_end":90,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2361,"byte_end":2366,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":3215,"byte_end":3220,"line_start":127,"line_end":127,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5194,"byte_end":5199,"line_start":197,"line_end":197,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5550,"byte_end":5555,"line_start":211,"line_end":211,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5670,"byte_end":5680,"line_start":217,"line_end":217,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5799,"byte_end":5809,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5919,"byte_end":5929,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13843,"byte_end":13849,"line_start":106,"line_end":106,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13902,"byte_end":13908,"line_start":107,"line_end":107,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13924,"byte_end":13930,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14804,"byte_end":14810,"line_start":143,"line_end":143,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":21919,"byte_end":21925,"line_start":342,"line_end":342,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":22290,"byte_end":22296,"line_start":353,"line_end":353,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":22408,"byte_end":22430,"line_start":359,"line_end":359,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":25172,"byte_end":25188,"line_start":451,"line_end":451,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26015,"byte_end":26030,"line_start":478,"line_end":478,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26177,"byte_end":26199,"line_start":486,"line_end":486,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26346,"byte_end":26362,"line_start":494,"line_end":494,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26512,"byte_end":26528,"line_start":502,"line_end":502,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26664,"byte_end":26679,"line_start":508,"line_end":508,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26903,"byte_end":26925,"line_start":515,"line_end":515,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":27192,"byte_end":27208,"line_start":525,"line_end":525,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":34679,"byte_end":34683,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35103,"byte_end":35107,"line_start":39,"line_end":39,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35144,"byte_end":35148,"line_start":40,"line_end":40,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35440,"byte_end":35444,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":39041,"byte_end":39047,"line_start":163,"line_end":163,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2289,"byte_end":2294,"line_start":89,"line_end":89,"column_start":40,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2340,"byte_end":2345,"line_start":90,"line_end":90,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":2361,"byte_end":2366,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":3215,"byte_end":3220,"line_start":127,"line_end":127,"column_start":17,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5194,"byte_end":5199,"line_start":197,"line_end":197,"column_start":45,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5550,"byte_end":5555,"line_start":211,"line_end":211,"column_start":39,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5670,"byte_end":5680,"line_start":217,"line_end":217,"column_start":31,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5799,"byte_end":5809,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs","byte_start":5919,"byte_end":5929,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13843,"byte_end":13849,"line_start":106,"line_end":106,"column_start":40,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13902,"byte_end":13908,"line_start":107,"line_end":107,"column_start":47,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":13924,"byte_end":13930,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":14804,"byte_end":14810,"line_start":143,"line_end":143,"column_start":17,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":21919,"byte_end":21925,"line_start":342,"line_end":342,"column_start":45,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":22290,"byte_end":22296,"line_start":353,"line_end":353,"column_start":39,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":22408,"byte_end":22430,"line_start":359,"line_end":359,"column_start":26,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":25172,"byte_end":25188,"line_start":451,"line_end":451,"column_start":26,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26015,"byte_end":26030,"line_start":478,"line_end":478,"column_start":36,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":219},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26177,"byte_end":26199,"line_start":486,"line_end":486,"column_start":36,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26346,"byte_end":26362,"line_start":494,"line_end":494,"column_start":36,"column_end":52},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26512,"byte_end":26528,"line_start":502,"line_end":502,"column_start":39,"column_end":55},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26664,"byte_end":26679,"line_start":508,"line_end":508,"column_start":35,"column_end":50},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":219},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":26903,"byte_end":26925,"line_start":515,"line_end":515,"column_start":35,"column_end":57},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs","byte_start":27192,"byte_end":27208,"line_start":525,"line_end":525,"column_start":35,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":34679,"byte_end":34683,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35103,"byte_end":35107,"line_start":39,"line_end":39,"column_start":38,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1550}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35144,"byte_end":35148,"line_start":40,"line_end":40,"column_start":31,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1538}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":35440,"byte_end":35444,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs","byte_start":39041,"byte_end":39047,"line_start":163,"line_end":163,"column_start":19,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":1731}}]}