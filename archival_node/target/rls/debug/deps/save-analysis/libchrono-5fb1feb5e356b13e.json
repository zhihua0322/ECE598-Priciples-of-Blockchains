{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11","program":"/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","chrono","/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"clock\"","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","--cfg","feature=\"time\"","-C","metadata=5fb1feb5e356b13e","-C","extra-filename=-5fb1feb5e356b13e","--out-dir","/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","-L","dependency=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","--extern","num_integer=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libnum_integer-ca4c3ff299126872.rmeta","--extern","num_traits=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libnum_traits-5b35bdba21054a22.rmeta","--extern","serde=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libserde-690b6879db2f91c3.rmeta","--extern","time=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libtime-0f7e9dc44712f826.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libchrono-5fb1feb5e356b13e.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[10204115280779298058,13474863027323761839]},"crate_root":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src","external_crates":[{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":15,"id":{"name":"time","disambiguator":[6179631219254321735,6435148011668572863]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[7618177583802962548,11488900425947472650]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[4980606775368741479,15176161130623737637]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[17950407306729131563,2318570031567167]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":19,"id":{"name":"serde","disambiguator":[2938614487196781713,5342538300229216309]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[15220135245576719264,18008959201428342070]}}],"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":76,"byte_end":42591,"line_start":4,"line_end":1125,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":304},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19484,"byte_end":19492,"line_start":438,"line_end":438,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19553,"byte_end":19558,"line_start":441,"line_end":441,"column_start":35,"column_end":40},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19595,"byte_end":19603,"line_start":442,"line_end":442,"column_start":36,"column_end":44},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19605,"byte_end":19611,"line_start":442,"line_end":442,"column_start":46,"column_end":52},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1819},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19613,"byte_end":19624,"line_start":442,"line_end":442,"column_start":54,"column_end":65},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19626,"byte_end":19629,"line_start":442,"line_end":442,"column_start":67,"column_end":70},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19631,"byte_end":19642,"line_start":442,"line_end":442,"column_start":72,"column_end":83},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19679,"byte_end":19688,"line_start":443,"line_end":443,"column_start":35,"column_end":44},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19690,"byte_end":19697,"line_start":443,"line_end":443,"column_start":46,"column_end":53},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19699,"byte_end":19708,"line_start":443,"line_end":443,"column_start":55,"column_end":64},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19710,"byte_end":19723,"line_start":443,"line_end":443,"column_start":66,"column_end":79},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2024},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19741,"byte_end":19745,"line_start":444,"line_end":444,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19747,"byte_end":19755,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19757,"byte_end":19765,"line_start":444,"line_end":444,"column_start":32,"column_end":40},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19787,"byte_end":19795,"line_start":445,"line_end":445,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2031},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19797,"byte_end":19810,"line_start":445,"line_end":445,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2277},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19912,"byte_end":19922,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19924,"byte_end":19935,"line_start":448,"line_end":448,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":19953,"byte_end":19964,"line_start":449,"line_end":449,"column_start":16,"column_end":27},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20099,"byte_end":20107,"line_start":453,"line_end":453,"column_start":32,"column_end":40},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20109,"byte_end":20117,"line_start":453,"line_end":453,"column_start":42,"column_end":50},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2377},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20119,"byte_end":20126,"line_start":453,"line_end":453,"column_start":52,"column_end":59},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20160,"byte_end":20168,"line_start":454,"line_end":454,"column_start":32,"column_end":40},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20170,"byte_end":20176,"line_start":454,"line_end":454,"column_start":42,"column_end":48},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20237,"byte_end":20242,"line_start":456,"line_end":456,"column_start":31,"column_end":36},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20275,"byte_end":20278,"line_start":457,"line_end":457,"column_start":32,"column_end":35},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20280,"byte_end":20291,"line_start":457,"line_end":457,"column_start":37,"column_end":48},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20325,"byte_end":20334,"line_start":458,"line_end":458,"column_start":32,"column_end":41},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20336,"byte_end":20345,"line_start":458,"line_end":458,"column_start":43,"column_end":52},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20347,"byte_end":20360,"line_start":458,"line_end":458,"column_start":54,"column_end":67},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2024},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20393,"byte_end":20397,"line_start":459,"line_end":459,"column_start":31,"column_end":35},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20430,"byte_end":20438,"line_start":460,"line_end":460,"column_start":32,"column_end":40},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2031},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20440,"byte_end":20453,"line_start":460,"line_end":460,"column_start":42,"column_end":55},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20486,"byte_end":20497,"line_start":461,"line_end":461,"column_start":31,"column_end":42},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":62398,"byte_end":62409,"line_start":469,"line_end":469,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":62458,"byte_end":62463,"line_start":471,"line_end":471,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":62484,"byte_end":62487,"line_start":472,"line_end":472,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21072,"byte_end":21081,"line_start":486,"line_end":486,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21083,"byte_end":21091,"line_start":486,"line_end":486,"column_start":37,"column_end":45},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21093,"byte_end":21101,"line_start":486,"line_end":486,"column_start":47,"column_end":55},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21131,"byte_end":21138,"line_start":487,"line_end":487,"column_start":28,"column_end":35},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21164,"byte_end":21173,"line_start":488,"line_end":488,"column_start":25,"column_end":34},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21203,"byte_end":21216,"line_start":489,"line_end":489,"column_start":29,"column_end":42},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":258}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21937,"byte_end":21938,"line_start":509,"line_end":509,"column_start":41,"column_end":42},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":845}},{"kind":"Use","ref_id":{"krate":0,"index":2349},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473587,"byte_end":473600,"line_start":40,"line_end":40,"column_start":25,"column_end":38},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":1389}},{"kind":"Use","ref_id":{"krate":0,"index":2318},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473624,"byte_end":473630,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1389}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473653,"byte_end":473658,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":1389}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21937,"byte_end":21938,"line_start":509,"line_end":509,"column_start":41,"column_end":42},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1731}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":76,"byte_end":42591,"line_start":4,"line_end":1125,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":258},{"krate":0,"index":847},{"krate":0,"index":982},{"krate":0,"index":1389},{"krate":0,"index":1717},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":2377},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2406},{"krate":0,"index":2404},{"krate":0,"index":2402},{"krate":0,"index":2399},{"krate":0,"index":1752},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":2413},{"krate":0,"index":2419},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1789},{"krate":0,"index":1808}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":17866,"byte_end":17888,"line_start":387,"line_end":387,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":17889,"byte_end":17928,"line_start":388,"line_end":388,"column_start":1,"column_end":40}},{"value":"deny(dead_code)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":17929,"byte_end":17948,"line_start":389,"line_end":389,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20058,"byte_end":20065,"line_start":452,"line_end":452,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":1819},{"krate":0,"index":1850},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1841},{"krate":0,"index":1839},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1830},{"krate":0,"index":85},{"krate":0,"index":93},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":130},{"krate":0,"index":189},{"krate":0,"index":225},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45497,"byte_end":45501,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45575,"byte_end":45581,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45747,"byte_end":45756,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1819},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45348,"byte_end":45359,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"LocalResult::{None, Single, Ambiguous}","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1826}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45906,"byte_end":45912,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":46140,"byte_end":46148,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":46405,"byte_end":46411,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":46658,"byte_end":46661,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn <U, F> (self, mut f: F) -> LocalResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":47236,"byte_end":47244,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn (self, time: NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":47215,"byte_end":47224,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":47742,"byte_end":47753,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn (self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":47721,"byte_end":47730,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":48376,"byte_end":48393,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn (self, hour: u32, min: u32, sec: u32, milli: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":48355,"byte_end":48364,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":49092,"byte_end":49109,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn (self, hour: u32, min: u32, sec: u32, micro: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":49071,"byte_end":49080,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":49810,"byte_end":49826,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn (self, hour: u32, min: u32, sec: u32, nano: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":49789,"byte_end":49798,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50314,"byte_end":50320,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50675,"byte_end":50681,"line_start":183,"line_end":183,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50787,"byte_end":50790,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn (&self) -> FixedOffset","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50989,"byte_end":50997,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":51220,"byte_end":51226,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":51843,"byte_end":51846,"line_start":213,"line_end":213,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn (&self, year: i32, month: u32, day: u32) -> Date<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":52662,"byte_end":52669,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn (&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":53518,"byte_end":53520,"line_start":255,"line_end":255,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn (&self, year: i32, ordinal: u32) -> Date<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":54071,"byte_end":54077,"line_start":266,"line_end":266,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn (&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":55055,"byte_end":55061,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> Date<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":55752,"byte_end":55762,"line_start":303,"line_end":303,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":56587,"byte_end":56596,"line_start":324,"line_end":324,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn (&self, secs: i64, nsecs: u32) -> DateTime<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":57079,"byte_end":57092,"line_start":334,"line_end":334,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn (&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":57832,"byte_end":57848,"line_start":354,"line_end":354,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"fn (&self, millis: i64) -> DateTime<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":58579,"byte_end":58599,"line_start":375,"line_end":375,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"fn (&self, millis: i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":59301,"byte_end":59316,"line_start":397,"line_end":397,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"fn (&self, nanos: i64) -> DateTime<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":60103,"byte_end":60120,"line_start":416,"line_end":416,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn (&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a `DateTime` with the current offset.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":60391,"byte_end":60402,"line_start":423,"line_end":423,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn (offset: &Self::Offset) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":60514,"byte_end":60536,"line_start":426,"line_end":426,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":60676,"byte_end":60702,"line_start":429,"line_end":429,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":60852,"byte_end":60867,"line_start":432,"line_end":432,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":61219,"byte_end":61238,"line_start":440,"line_end":440,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":61512,"byte_end":61532,"line_start":446,"line_end":446,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":61658,"byte_end":61682,"line_start":449,"line_end":449,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":61889,"byte_end":61902,"line_start":453,"line_end":453,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":62175,"byte_end":62192,"line_start":459,"line_end":459,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1853},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":65522,"byte_end":65533,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":1854}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":66137,"byte_end":66141,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":66476,"byte_end":66484,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":67226,"byte_end":67230,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":67565,"byte_end":67573,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":67872,"byte_end":67887,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":67851,"byte_end":67860,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68049,"byte_end":68064,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68028,"byte_end":68037,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":74972,"byte_end":74977,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Local","qualname":"::offset::local::Local","value":"","parent":null,"children":[],"decl_id":null,"docs":" The local timescale. This is implemented via the standard `time` crate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":75068,"byte_end":75073,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"today","qualname":"<Local>::today","value":"fn () -> Date<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":75299,"byte_end":75302,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"now","qualname":"<Local>::now","value":"fn () -> DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"cfg(not\n      (all\n       (target_arch = \"wasm32\", not (target_os = \"wasi\"), feature =\n        \"wasmbind\")))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":75200,"byte_end":75287,"line_start":90,"line_end":90,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1875},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80117,"byte_end":80120,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80233,"byte_end":80238,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"today","qualname":"<Utc>::today","value":"fn () -> Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80448,"byte_end":80451,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"now","qualname":"<Utc>::now","value":"fn () -> DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"cfg(not\n      (all\n       (target_arch = \"wasm32\", not (target_os = \"wasi\"), feature =\n        \"wasmbind\")))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80349,"byte_end":80436,"line_start":44,"line_end":44,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20703,"byte_end":20708,"line_start":473,"line_end":473,"column_start":9,"column_end":14},"name":"naive","qualname":"::naive","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":339},{"krate":0,"index":494},{"krate":0,"index":507},{"krate":0,"index":613},{"krate":0,"index":838},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1931},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":118213,"byte_end":118222,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":1932}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":379},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":118341,"byte_end":118349,"line_start":106,"line_end":106,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":380},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":118499,"byte_end":118507,"line_start":108,"line_end":108,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":120817,"byte_end":120825,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn (year: i32, month: u32, day: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":121676,"byte_end":121688,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn (year: i32, month: u32, day: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":122582,"byte_end":122589,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn (year: i32, ordinal: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":123459,"byte_end":123470,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn (year: i32, ordinal: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":124476,"byte_end":124487,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn (year: i32, week: u32, weekday: Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":126850,"byte_end":126865,"line_start":311,"line_end":311,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn (year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":129746,"byte_end":129767,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn (days: i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":129725,"byte_end":129734,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":130716,"byte_end":130741,"line_start":405,"line_end":405,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn (days: i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":132478,"byte_end":132499,"line_start":439,"line_end":439,"column_start":12,"column_end":33},"name":"from_weekday_of_month","qualname":"<NaiveDate>::from_weekday_of_month","value":"fn (year: i32, month: u32, weekday: Weekday, n: u8) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":133374,"byte_end":133399,"line_start":455,"line_end":455,"column_start":12,"column_end":37},"name":"from_weekday_of_month_opt","qualname":"<NaiveDate>::from_weekday_of_month_opt","value":"fn (year: i32, month: u32, weekday: Weekday, n: u8) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":135360,"byte_end":135374,"line_start":505,"line_end":505,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":136023,"byte_end":136031,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn (&self, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":136002,"byte_end":136011,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":136847,"byte_end":136854,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":136826,"byte_end":136835,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":137740,"byte_end":137751,"line_start":573,"line_end":573,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":137719,"byte_end":137728,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":138690,"byte_end":138703,"line_start":598,"line_end":598,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":138669,"byte_end":138678,"line_start":597,"line_end":597,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":139776,"byte_end":139793,"line_start":623,"line_end":623,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":139755,"byte_end":139764,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":140794,"byte_end":140807,"line_start":649,"line_end":649,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":140773,"byte_end":140782,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":141908,"byte_end":141925,"line_start":674,"line_end":674,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":141887,"byte_end":141896,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":142930,"byte_end":142942,"line_start":700,"line_end":700,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":142909,"byte_end":142918,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":144059,"byte_end":144075,"line_start":725,"line_end":725,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":144038,"byte_end":144047,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":145748,"byte_end":145752,"line_start":777,"line_end":777,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":145727,"byte_end":145736,"line_start":776,"line_end":776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":146294,"byte_end":146302,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":146273,"byte_end":146282,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":146979,"byte_end":146983,"line_start":814,"line_end":814,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":146958,"byte_end":146967,"line_start":813,"line_end":813,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":147530,"byte_end":147538,"line_start":833,"line_end":833,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":147509,"byte_end":147518,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":148585,"byte_end":148603,"line_start":859,"line_end":859,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":150236,"byte_end":150254,"line_start":895,"line_end":895,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":152180,"byte_end":152201,"line_start":934,"line_end":934,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn (self, rhs: NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":153964,"byte_end":153981,"line_start":974,"line_end":974,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDate>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n Otherwise it is the same as the ordinary `format` method.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":153885,"byte_end":153938,"line_start":972,"line_end":972,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":153943,"byte_end":153952,"line_start":973,"line_end":973,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":155654,"byte_end":155660,"line_start":1013,"line_end":1013,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDate>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":155575,"byte_end":155628,"line_start":1011,"line_end":1011,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":155633,"byte_end":155642,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":202999,"byte_end":203006,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":1955}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":204944,"byte_end":204948,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":204923,"byte_end":204932,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":205398,"byte_end":205402,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":205377,"byte_end":205386,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":205870,"byte_end":205875,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":205849,"byte_end":205858,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":215639,"byte_end":215648,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":216306,"byte_end":216314,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn (hour: u32, min: u32, sec: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":216285,"byte_end":216294,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":217171,"byte_end":217183,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn (hour: u32, min: u32, sec: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":217150,"byte_end":217159,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":217924,"byte_end":217938,"line_start":252,"line_end":252,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":217903,"byte_end":217912,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":218998,"byte_end":219016,"line_start":279,"line_end":279,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":218977,"byte_end":218986,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":219840,"byte_end":219854,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":219819,"byte_end":219828,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":220930,"byte_end":220948,"line_start":330,"line_end":330,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":220909,"byte_end":220918,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":221772,"byte_end":221785,"line_start":354,"line_end":354,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":221751,"byte_end":221760,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":222870,"byte_end":222887,"line_start":381,"line_end":381,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":222849,"byte_end":222858,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":223811,"byte_end":223841,"line_start":406,"line_end":406,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn (secs: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":223790,"byte_end":223799,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":224813,"byte_end":224847,"line_start":431,"line_end":431,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn (secs: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":224792,"byte_end":224801,"line_start":430,"line_end":430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":227497,"byte_end":227511,"line_start":497,"line_end":497,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":228674,"byte_end":228696,"line_start":526,"line_end":526,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn (&self, mut rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":232205,"byte_end":232227,"line_start":612,"line_end":612,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn (&self, rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":232184,"byte_end":232193,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":235281,"byte_end":235302,"line_start":677,"line_end":677,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn (self, rhs: NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":237752,"byte_end":237769,"line_start":732,"line_end":732,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveTime>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":237673,"byte_end":237726,"line_start":730,"line_end":730,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":237731,"byte_end":237740,"line_start":731,"line_end":731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":239575,"byte_end":239581,"line_start":773,"line_end":773,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":239496,"byte_end":239549,"line_start":771,"line_end":771,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":239554,"byte_end":239563,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":280510,"byte_end":280523,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":281185,"byte_end":281188,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn (date: NaiveDate, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":281164,"byte_end":281173,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":282471,"byte_end":282485,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn (secs: i64, nsecs: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":282450,"byte_end":282459,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":283827,"byte_end":283845,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn (secs: i64, nsecs: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":283806,"byte_end":283815,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":287224,"byte_end":287238,"line_start":211,"line_end":211,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":287760,"byte_end":287764,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":287739,"byte_end":287748,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":288117,"byte_end":288121,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":288096,"byte_end":288105,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":289028,"byte_end":289037,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":289007,"byte_end":289016,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":290415,"byte_end":290431,"line_start":302,"line_end":302,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":290394,"byte_end":290403,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":291899,"byte_end":291914,"line_start":341,"line_end":341,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":291878,"byte_end":291887,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":292692,"byte_end":292715,"line_start":363,"line_end":363,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":292671,"byte_end":292680,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":293448,"byte_end":293471,"line_start":384,"line_end":384,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":293427,"byte_end":293436,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":294213,"byte_end":294235,"line_start":405,"line_end":405,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":294192,"byte_end":294201,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":297614,"byte_end":297632,"line_start":483,"line_end":483,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":301176,"byte_end":301194,"line_start":565,"line_end":565,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":303603,"byte_end":303624,"line_start":621,"line_end":621,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn (self, rhs: NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":305066,"byte_end":305083,"line_start":654,"line_end":654,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDateTime>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":304987,"byte_end":305040,"line_start":652,"line_end":652,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":305045,"byte_end":305054,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":306869,"byte_end":306875,"line_start":693,"line_end":693,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDateTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":306790,"byte_end":306843,"line_start":691,"line_end":691,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":306848,"byte_end":306857,"line_start":692,"line_end":692,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":763},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":345303,"byte_end":345317,"line_start":1758,"line_end":1758,"column_start":13,"column_end":27},"name":"ts_nanoseconds","qualname":"::naive::datetime::serde::ts_nanoseconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":778}],"decl_id":null,"docs":" Used to serialize/deserialize from nanosecond-precision timestamps","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":346890,"byte_end":346899,"line_start":1798,"line_end":1798,"column_start":16,"column_end":25},"name":"serialize","qualname":"::naive::datetime::serde::ts_nanoseconds::serialize","value":"fn <S> (dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of nanoseconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":773},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":348320,"byte_end":348331,"line_start":1834,"line_end":1834,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::naive::datetime::serde::ts_nanoseconds::deserialize","value":"fn <'de, D> (d: D) -> Result<NaiveDateTime, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a nanoseconds timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":788},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":350884,"byte_end":350899,"line_start":1903,"line_end":1903,"column_start":13,"column_end":28},"name":"ts_milliseconds","qualname":"::naive::datetime::serde::ts_milliseconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":803}],"decl_id":null,"docs":" Used to serialize/deserialize from millisecond-precision timestamps","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":796},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":352465,"byte_end":352474,"line_start":1943,"line_end":1943,"column_start":16,"column_end":25},"name":"serialize","qualname":"::naive::datetime::serde::ts_milliseconds::serialize","value":"fn <S> (dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of milliseconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":798},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":353894,"byte_end":353905,"line_start":1979,"line_end":1979,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::naive::datetime::serde::ts_milliseconds::deserialize","value":"fn <'de, D> (d: D) -> Result<NaiveDateTime, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a milliseconds timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":813},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":356416,"byte_end":356426,"line_start":2048,"line_end":2048,"column_start":13,"column_end":23},"name":"ts_seconds","qualname":"::naive::datetime::serde::ts_seconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":828}],"decl_id":null,"docs":" Used to serialize/deserialize from second-precision timestamps","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":821},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":357954,"byte_end":357963,"line_start":2088,"line_end":2088,"column_start":16,"column_end":25},"name":"serialize","qualname":"::naive::datetime::serde::ts_seconds::serialize","value":"fn <S> (dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of seconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":823},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":359351,"byte_end":359362,"line_start":2124,"line_end":2124,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::naive::datetime::serde::ts_seconds::deserialize","value":"fn <'de, D> (d: D) -> Result<NaiveDateTime, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a seconds timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":845},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21889,"byte_end":21894,"line_start":508,"line_end":508,"column_start":13,"column_end":18},"name":"serde","qualname":"::naive::serde","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":846}],"decl_id":null,"docs":" Serialization/Deserialization of naive types in alternate formats","sig":null,"attributes":[{"value":"cfg(feature = \"serde\")","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21851,"byte_end":21876,"line_start":507,"line_end":507,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2024},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373428,"byte_end":373432,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":873},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373540,"byte_end":373548,"line_start":50,"line_end":50,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":874},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373650,"byte_end":373658,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":374006,"byte_end":374014,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn (date: NaiveDate, offset: Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373985,"byte_end":373994,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":374315,"byte_end":374323,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn (&self, time: NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":374294,"byte_end":374303,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":374720,"byte_end":374727,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":374699,"byte_end":374708,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":375082,"byte_end":375093,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":375061,"byte_end":375070,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":375580,"byte_end":375593,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":375559,"byte_end":375568,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":376084,"byte_end":376101,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":376063,"byte_end":376072,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":376646,"byte_end":376659,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":376625,"byte_end":376634,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":377154,"byte_end":377171,"line_start":129,"line_end":129,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":377133,"byte_end":377142,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":377717,"byte_end":377729,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":377696,"byte_end":377705,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378222,"byte_end":378238,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378201,"byte_end":378210,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378583,"byte_end":378587,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378562,"byte_end":378571,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378809,"byte_end":378817,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":378788,"byte_end":378797,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379077,"byte_end":379081,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379056,"byte_end":379065,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379305,"byte_end":379313,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379284,"byte_end":379293,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379507,"byte_end":379513,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn (&self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379486,"byte_end":379495,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379634,"byte_end":379642,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379613,"byte_end":379622,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379868,"byte_end":379881,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> Date<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":379847,"byte_end":379856,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380113,"byte_end":380131,"line_start":210,"line_end":210,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380092,"byte_end":380101,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380451,"byte_end":380469,"line_start":219,"line_end":219,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380430,"byte_end":380439,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380970,"byte_end":380991,"line_start":231,"line_end":231,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: Date<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":380949,"byte_end":380958,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381174,"byte_end":381183,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381153,"byte_end":381162,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381493,"byte_end":381504,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381472,"byte_end":381481,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382049,"byte_end":382066,"line_start":262,"line_end":262,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<Date<Tz>>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381970,"byte_end":382023,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382028,"byte_end":382037,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382541,"byte_end":382547,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"format","qualname":"<Date<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382462,"byte_end":382515,"line_start":270,"line_end":270,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382520,"byte_end":382529,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":387365,"byte_end":387369,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2034},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":387508,"byte_end":387514,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2036},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":387653,"byte_end":387659,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2038},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":387798,"byte_end":387803,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2040},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":388039,"byte_end":388045,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2042},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":388105,"byte_end":388120,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2031},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":387272,"byte_end":387285,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"SecondsFormat::{Secs, Millis, Micros, Nanos, AutoSi, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":388418,"byte_end":388426,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389066,"byte_end":389074,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn (datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389045,"byte_end":389054,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389262,"byte_end":389266,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389241,"byte_end":389250,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389491,"byte_end":389495,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389470,"byte_end":389479,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389712,"byte_end":389721,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":389691,"byte_end":389700,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":390542,"byte_end":390558,"line_start":131,"line_end":131,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":390521,"byte_end":390530,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":391380,"byte_end":391395,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":391359,"byte_end":391368,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":391725,"byte_end":391748,"line_start":165,"line_end":165,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":391704,"byte_end":391713,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392090,"byte_end":392113,"line_start":175,"line_end":175,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392069,"byte_end":392078,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392457,"byte_end":392479,"line_start":185,"line_end":185,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392436,"byte_end":392445,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392624,"byte_end":392630,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn (&self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392603,"byte_end":392612,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392751,"byte_end":392759,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392730,"byte_end":392739,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392989,"byte_end":393002,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> DateTime<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `DateTime` (but will change the string representation).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":392968,"byte_end":392977,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":393255,"byte_end":393273,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":393234,"byte_end":393243,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":393639,"byte_end":393657,"line_start":222,"line_end":222,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":393618,"byte_end":393627,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394086,"byte_end":394107,"line_start":232,"line_end":232,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: DateTime<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394065,"byte_end":394074,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394306,"byte_end":394315,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394285,"byte_end":394294,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394448,"byte_end":394459,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394427,"byte_end":394436,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":398261,"byte_end":398279,"line_start":338,"line_end":338,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":398904,"byte_end":398922,"line_start":350,"line_end":350,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400130,"byte_end":400144,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a new `DateTime` with a parsed `FixedOffset`.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400565,"byte_end":400575,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"to_rfc2822","qualname":"<DateTime<Tz>>::to_rfc2822","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400500,"byte_end":400553,"line_start":386,"line_end":386,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400907,"byte_end":400917,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"name":"to_rfc3339","qualname":"<DateTime<Tz>>::to_rfc3339","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400842,"byte_end":400895,"line_start":393,"line_end":393,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":402380,"byte_end":402395,"line_start":424,"line_end":424,"column_start":12,"column_end":27},"name":"to_rfc3339_opts","qualname":"<DateTime<Tz>>::to_rfc3339_opts","value":"fn (&self, secform: SecondsFormat, use_z: bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return an RFC 3339 and ISO 8601 date and time string with subseconds\n formatted as per a `SecondsFormat`. If passed `use_z` true and the\n timezone is UTC (offset 0), use 'Z', as per\n [Fixed::TimezoneOffsetColonZ](format/enum.Fixed.html#variant.TimezoneOffsetColonZ).\n If passed `use_z` false, use\n [Fixed::TimezoneOffsetColon](format/enum.Fixed.html#variant.TimezoneOffsetColon).","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":402315,"byte_end":402368,"line_start":423,"line_end":423,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404154,"byte_end":404171,"line_start":477,"line_end":477,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<DateTime<Tz>>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404075,"byte_end":404128,"line_start":475,"line_end":475,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404133,"byte_end":404142,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404712,"byte_end":404718,"line_start":488,"line_end":488,"column_start":12,"column_end":18},"name":"format","qualname":"<DateTime<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404633,"byte_end":404686,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404691,"byte_end":404700,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2062},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":420772,"byte_end":420795,"line_start":935,"line_end":935,"column_start":16,"column_end":39},"name":"SecondsTimestampVisitor","qualname":"::datetime::serde::SecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":420853,"byte_end":420880,"line_start":939,"line_end":939,"column_start":16,"column_end":43},"name":"NanoSecondsTimestampVisitor","qualname":"::datetime::serde::NanoSecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":420938,"byte_end":420966,"line_start":943,"line_end":943,"column_start":16,"column_end":44},"name":"MilliSecondsTimestampVisitor","qualname":"::datetime::serde::MilliSecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1195},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":422788,"byte_end":422802,"line_start":997,"line_end":997,"column_start":13,"column_end":27},"name":"ts_nanoseconds","qualname":"::datetime::serde::ts_nanoseconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1212}],"decl_id":null,"docs":" Ser/de to/from timestamps in nanoseconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1207},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":424336,"byte_end":424345,"line_start":1038,"line_end":1038,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_nanoseconds::serialize","value":"fn <S> (dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of nanoseconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1209},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":425681,"byte_end":425692,"line_start":1072,"line_end":1072,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_nanoseconds::deserialize","value":"fn <'de, D> (d: D) -> Result<DateTime<Utc>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a nanosecond timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1220},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":428266,"byte_end":428287,"line_start":1142,"line_end":1142,"column_start":13,"column_end":34},"name":"ts_nanoseconds_option","qualname":"::datetime::serde::ts_nanoseconds_option","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1238}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in nanoseconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1231},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":429830,"byte_end":429839,"line_start":1182,"line_end":1182,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_nanoseconds_option::serialize","value":"fn <S> (opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of nanoseconds since the epoch or none","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1233},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":431321,"byte_end":431332,"line_start":1219,"line_end":1219,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_nanoseconds_option::deserialize","value":"fn <'de, D> (d: D) -> Result<Option<DateTime<Utc>>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a nanosecond timestamp or none","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1247},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":433734,"byte_end":433749,"line_start":1288,"line_end":1288,"column_start":13,"column_end":28},"name":"ts_milliseconds","qualname":"::datetime::serde::ts_milliseconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1265}],"decl_id":null,"docs":" Ser/de to/from timestamps in milliseconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":435277,"byte_end":435286,"line_start":1329,"line_end":1329,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_milliseconds::serialize","value":"fn <S> (dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of milliseconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1261},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":436621,"byte_end":436632,"line_start":1363,"line_end":1363,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_milliseconds::deserialize","value":"fn <'de, D> (d: D) -> Result<DateTime<Utc>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a millisecond timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1273},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":439224,"byte_end":439246,"line_start":1433,"line_end":1433,"column_start":13,"column_end":35},"name":"ts_milliseconds_option","qualname":"::datetime::serde::ts_milliseconds_option","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":1293}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in milliseconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":440784,"byte_end":440793,"line_start":1473,"line_end":1473,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_milliseconds_option::serialize","value":"fn <S> (opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of milliseconds since the epoch or none","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":442274,"byte_end":442285,"line_start":1510,"line_end":1510,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_milliseconds_option::deserialize","value":"fn <'de, D> (d: D) -> Result<Option<DateTime<Utc>>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a millisecond timestamp or none","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1302},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":444711,"byte_end":444721,"line_start":1579,"line_end":1579,"column_start":13,"column_end":23},"name":"ts_seconds","qualname":"::datetime::serde::ts_seconds","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1319}],"decl_id":null,"docs":" Ser/de to/from timestamps in seconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1314},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":446206,"byte_end":446215,"line_start":1620,"line_end":1620,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_seconds::serialize","value":"fn <S> (dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of seconds since the epoch","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1316},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":447519,"byte_end":447530,"line_start":1654,"line_end":1654,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_seconds::deserialize","value":"fn <'de, D> (d: D) -> Result<DateTime<Utc>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a seconds timestamp","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1327},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":449824,"byte_end":449841,"line_start":1720,"line_end":1720,"column_start":13,"column_end":30},"name":"ts_seconds_option","qualname":"::datetime::serde::ts_seconds_option","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1345}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in seconds","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1338},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":451331,"byte_end":451340,"line_start":1760,"line_end":1760,"column_start":16,"column_end":25},"name":"serialize","qualname":"::datetime::serde::ts_seconds_option::serialize","value":"fn <S> (opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of seconds since the epoch or none","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1340},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":452792,"byte_end":452803,"line_start":1797,"line_end":1797,"column_start":16,"column_end":27},"name":"deserialize","qualname":"::datetime::serde::ts_seconds_option::deserialize","value":"fn <'de, D> (d: D) -> Result<Option<DateTime<Utc>>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a seconds timestamp or none","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1389},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":2074},{"krate":0,"index":2081},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2083},{"krate":0,"index":2100},{"krate":0,"index":2098},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2090},{"krate":0,"index":2101},{"krate":0,"index":2154},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2145},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":2156},{"krate":0,"index":2203},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2194},{"krate":0,"index":2205},{"krate":0,"index":2216},{"krate":0,"index":2214},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2218},{"krate":0,"index":2235},{"krate":0,"index":2233},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2237},{"krate":0,"index":2274},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2260},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":2277},{"krate":0,"index":2290},{"krate":0,"index":2288},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2280},{"krate":0,"index":2292},{"krate":0,"index":2316},{"krate":0,"index":2314},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2307},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1496},{"krate":0,"index":1565},{"krate":0,"index":1609},{"krate":0,"index":1678},{"krate":0,"index":2368},{"krate":0,"index":2374},{"krate":0,"index":1702},{"krate":0,"index":1709},{"krate":0,"index":1714}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":472899,"byte_end":472943,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2084},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473911,"byte_end":473915,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473949,"byte_end":473953,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2088},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473982,"byte_end":473987,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2083},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":473881,"byte_end":473884,"line_start":50,"line_end":50,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"Pad::{None, Zero, Space}","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2102},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":474883,"byte_end":474887,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2104},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":474989,"byte_end":474999,"line_start":78,"line_end":78,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2106},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475070,"byte_end":475080,"line_start":80,"line_end":80,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475215,"byte_end":475222,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2110},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475320,"byte_end":475333,"line_start":85,"line_end":85,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2112},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475416,"byte_end":475429,"line_start":87,"line_end":87,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475460,"byte_end":475465,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2116},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475507,"byte_end":475510,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2118},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475603,"byte_end":475614,"line_start":93,"line_end":93,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475707,"byte_end":475718,"line_start":95,"line_end":95,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2122},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475776,"byte_end":475783,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2124},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475859,"byte_end":475873,"line_start":99,"line_end":99,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":475947,"byte_end":475961,"line_start":101,"line_end":101,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476002,"byte_end":476009,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2130},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476068,"byte_end":476072,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476131,"byte_end":476137,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476210,"byte_end":476216,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476291,"byte_end":476297,"line_start":111,"line_end":111,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476500,"byte_end":476510,"line_start":115,"line_end":115,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476690,"byte_end":476699,"line_start":118,"line_end":118,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2142},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":476918,"byte_end":476926,"line_start":124,"line_end":124,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2101},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":474746,"byte_end":474753,"line_start":73,"line_end":73,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"Numeric::{Year, YearDiv100, YearMod100, IsoYear, IsoYearDiv100, IsoYearMod100, Month, Day, WeekFromSun, WeekFromMon, IsoWeek, NumDaysFromSun, WeekdayFromMon, Ordinal, Hour, Hour12, Minute, Second, Nanosecond, Timestamp, Internal}","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477034,"byte_end":477049,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":1413}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477848,"byte_end":477862,"line_start":162,"line_end":162,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477995,"byte_end":478008,"line_start":166,"line_end":166,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2161},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478157,"byte_end":478173,"line_start":170,"line_end":170,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478316,"byte_end":478331,"line_start":174,"line_end":174,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2165},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478409,"byte_end":478418,"line_start":178,"line_end":178,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2167},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478496,"byte_end":478505,"line_start":182,"line_end":182,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2169},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478752,"byte_end":478762,"line_start":186,"line_end":186,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2171},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478852,"byte_end":478863,"line_start":188,"line_end":188,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2173},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":478953,"byte_end":478964,"line_start":190,"line_end":190,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2175},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":479054,"byte_end":479065,"line_start":192,"line_end":192,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2177},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":479186,"byte_end":479198,"line_start":196,"line_end":196,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":479533,"byte_end":479552,"line_start":202,"line_end":202,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2181},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":479944,"byte_end":479964,"line_start":209,"line_end":209,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2183},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480103,"byte_end":480117,"line_start":212,"line_end":212,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480258,"byte_end":480273,"line_start":215,"line_end":215,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2187},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480366,"byte_end":480373,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2189},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480429,"byte_end":480436,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480655,"byte_end":480663,"line_start":225,"line_end":225,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2156},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477703,"byte_end":477708,"line_start":158,"line_end":158,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"Fixed::{ShortMonthName, LongMonthName, ShortWeekdayName, LongWeekdayName, LowerAmPm, UpperAmPm, Nanosecond, Nanosecond3, Nanosecond6, Nanosecond9, TimezoneName, TimezoneOffsetColon, TimezoneOffsetColonZ, TimezoneOffset, TimezoneOffsetZ, RFC2822, RFC3339, Internal}","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2205},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":480813,"byte_end":480826,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":2206}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":481842,"byte_end":481849,"line_start":257,"line_end":257,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":481987,"byte_end":481999,"line_start":260,"line_end":260,"column_start":5,"column_end":17},"name":"OwnedLiteral","qualname":"::format::Item::OwnedLiteral","value":"Item::OwnedLiteral(Box<str>)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Same as `Literal` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":481929,"byte_end":481982,"line_start":259,"line_end":259,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482087,"byte_end":482092,"line_start":262,"line_end":262,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482228,"byte_end":482238,"line_start":265,"line_end":265,"column_start":5,"column_end":15},"name":"OwnedSpace","qualname":"::format::Item::OwnedSpace","value":"Item::OwnedSpace(Box<str>)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Same as `Space` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482170,"byte_end":482223,"line_start":264,"line_end":264,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482417,"byte_end":482424,"line_start":268,"line_end":268,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482471,"byte_end":482476,"line_start":270,"line_end":270,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2258},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":482565,"byte_end":482570,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2237},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":481782,"byte_end":481786,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"Item::{Literal, OwnedLiteral, Space, OwnedSpace, Numeric, Fixed, Error}","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2255},{"krate":0,"index":2258}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2277},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":483189,"byte_end":483199,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1428},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":484467,"byte_end":484478,"line_start":320,"line_end":320,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Result<T, ParseError>`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":486136,"byte_end":486142,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"format","qualname":"::format::format","value":"fn <'a, I, B> (w: &mut fmt::Formatter, date: Option<&NaiveDate>, time: Option<&NaiveTime>, off: Option<&(String, FixedOffset)>, items: I) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Tries to format given arguments with given formatting items.\n Internally used by `DelayedFormat`.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":486075,"byte_end":486128,"line_start":355,"line_end":355,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2318},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":502632,"byte_end":502638,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":502547,"byte_end":502585,"line_start":25,"line_end":25,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2319},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":502815,"byte_end":502819,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2320},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":503123,"byte_end":503135,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2321},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":503228,"byte_end":503240,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2322},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":503507,"byte_end":503514,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2323},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":503901,"byte_end":503916,"line_start":56,"line_end":56,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2324},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504083,"byte_end":504098,"line_start":60,"line_end":60,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2325},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504145,"byte_end":504150,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2326},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504305,"byte_end":504318,"line_start":67,"line_end":67,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2327},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504473,"byte_end":504486,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2328},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504626,"byte_end":504633,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2329},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504682,"byte_end":504689,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"std::option::Option<Weekday>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2330},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504783,"byte_end":504790,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504894,"byte_end":504897,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":504998,"byte_end":505009,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505072,"byte_end":505083,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2334},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505138,"byte_end":505144,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505228,"byte_end":505234,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2336},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505333,"byte_end":505343,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"std::option::Option<u32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2337},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505546,"byte_end":505555,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2338},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":505634,"byte_end":505640,"line_start":107,"line_end":107,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506745,"byte_end":506748,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn () -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506898,"byte_end":506906,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506877,"byte_end":506886,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507155,"byte_end":507171,"line_start":152,"line_end":152,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507134,"byte_end":507143,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507479,"byte_end":507495,"line_start":159,"line_end":159,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507458,"byte_end":507467,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507793,"byte_end":507804,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":507772,"byte_end":507781,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508062,"byte_end":508081,"line_start":172,"line_end":172,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508041,"byte_end":508050,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508398,"byte_end":508417,"line_start":179,"line_end":179,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508377,"byte_end":508386,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508714,"byte_end":508723,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508693,"byte_end":508702,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508975,"byte_end":508992,"line_start":192,"line_end":192,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":508954,"byte_end":508963,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509252,"byte_end":509269,"line_start":198,"line_end":198,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509231,"byte_end":509240,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509517,"byte_end":509528,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509496,"byte_end":509505,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509770,"byte_end":509781,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn (&mut self, value: Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509749,"byte_end":509758,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509997,"byte_end":510008,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":509976,"byte_end":509985,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510242,"byte_end":510249,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510221,"byte_end":510230,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510535,"byte_end":510543,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn (&mut self, value: bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510514,"byte_end":510523,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510816,"byte_end":510826,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":510795,"byte_end":510804,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511183,"byte_end":511191,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511162,"byte_end":511171,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511535,"byte_end":511545,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511514,"byte_end":511523,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511784,"byte_end":511794,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":511763,"byte_end":511772,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512041,"byte_end":512055,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512020,"byte_end":512029,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512304,"byte_end":512317,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512283,"byte_end":512292,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512529,"byte_end":512539,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":512508,"byte_end":512517,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":513183,"byte_end":513196,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn (&self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":522184,"byte_end":522197,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn (&self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":523980,"byte_end":524009,"line_start":519,"line_end":519,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn (&self, offset: i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":527376,"byte_end":527391,"line_start":589,"line_end":589,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn (&self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":527863,"byte_end":527874,"line_start":599,"line_end":599,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn (&self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":528902,"byte_end":528927,"line_start":619,"line_end":619,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn <Tz> (&self, tz: &Tz) -> ParseResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1645},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parse.rs","byte_start":576164,"byte_end":576169,"line_start":205,"line_end":205,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn <'a, I, B> (parsed: &mut Parsed, s: &str, items: I) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1678},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":2349},{"krate":0,"index":2356},{"krate":0,"index":2353},{"krate":0,"index":1686},{"krate":0,"index":1691},{"krate":0,"index":1692}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2349},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":619534,"byte_end":619547,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":620023,"byte_end":620026,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn (s: &'a str) -> StrftimeItems<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499145,"byte_end":499158,"line_start":619,"line_end":619,"column_start":12,"column_end":25},"name":"DelayedFormat","qualname":"::format::DelayedFormat","value":"DelayedFormat {  }","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373}],"decl_id":null,"docs":" A *temporary* object which can be used as an argument to `format!` or others.\n This is normally constructed via `format` methods of each date and time type.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499063,"byte_end":499116,"line_start":617,"line_end":617,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499682,"byte_end":499685,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayedFormat<I>>::new","value":"fn (date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499945,"byte_end":499960,"line_start":638,"line_end":638,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<DelayedFormat<I>>::new_with_offset","value":"fn <Off> (date: Option<NaiveDate>, time: Option<NaiveTime>, offset: &Off, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time and UTC offset.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1723},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/round.rs","byte_start":634910,"byte_end":634921,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/round.rs","byte_start":635451,"byte_end":635464,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"fn (self, digits: u16) -> Self","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/round.rs","byte_start":635967,"byte_end":635980,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"fn (self, digits: u16) -> Self","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1731},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":22458,"byte_end":22463,"line_start":530,"line_end":530,"column_start":9,"column_end":14},"name":"serde","qualname":"::serde","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1732}],"decl_id":null,"docs":" Serialization/Deserialization in alternate formats","sig":null,"attributes":[{"value":"cfg(feature = \"serde\")","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":22424,"byte_end":22449,"line_start":529,"line_end":529,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2378},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24211,"byte_end":24214,"line_start":578,"line_end":578,"column_start":5,"column_end":8},"name":"Mon","qualname":"::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24241,"byte_end":24244,"line_start":580,"line_end":580,"column_start":5,"column_end":8},"name":"Tue","qualname":"::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24273,"byte_end":24276,"line_start":582,"line_end":582,"column_start":5,"column_end":8},"name":"Wed","qualname":"::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2387},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24304,"byte_end":24307,"line_start":584,"line_end":584,"column_start":5,"column_end":8},"name":"Thu","qualname":"::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2390},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24333,"byte_end":24336,"line_start":586,"line_end":586,"column_start":5,"column_end":8},"name":"Fri","qualname":"::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2393},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24364,"byte_end":24367,"line_start":588,"line_end":588,"column_start":5,"column_end":8},"name":"Sat","qualname":"::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2396},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24393,"byte_end":24396,"line_start":590,"line_end":590,"column_start":5,"column_end":8},"name":"Sun","qualname":"::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2377},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24181,"byte_end":24188,"line_start":576,"line_end":576,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::Weekday","value":"Weekday::{Mon, Tue, Wed, Thu, Fri, Sat, Sun}","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24715,"byte_end":24719,"line_start":600,"line_end":600,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24694,"byte_end":24703,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":25372,"byte_end":25376,"line_start":618,"line_end":618,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":25351,"byte_end":25360,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":26118,"byte_end":26136,"line_start":636,"line_end":636,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":26097,"byte_end":26106,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":26771,"byte_end":26789,"line_start":654,"line_end":654,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":26750,"byte_end":26759,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":27430,"byte_end":27450,"line_start":672,"line_end":672,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":27409,"byte_end":27418,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":28091,"byte_end":28111,"line_start":690,"line_end":690,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":28070,"byte_end":28079,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2413},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":29950,"byte_end":29967,"line_start":754,"line_end":754,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":2414}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1789},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33067,"byte_end":33075,"line_start":873,"line_end":873,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33193,"byte_end":33197,"line_start":875,"line_end":875,"column_start":8,"column_end":12},"name":"year","qualname":"::Datelike::year","value":"fn (&self) -> i32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33406,"byte_end":33413,"line_start":880,"line_end":880,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::Datelike::year_ce","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33389,"byte_end":33398,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33708,"byte_end":33713,"line_start":892,"line_end":892,"column_start":8,"column_end":13},"name":"month","qualname":"::Datelike::month","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33841,"byte_end":33847,"line_start":897,"line_end":897,"column_start":8,"column_end":14},"name":"month0","qualname":"::Datelike::month0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34018,"byte_end":34021,"line_start":902,"line_end":902,"column_start":8,"column_end":11},"name":"day","qualname":"::Datelike::day","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34192,"byte_end":34196,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"day0","qualname":"::Datelike::day0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34365,"byte_end":34372,"line_start":912,"line_end":912,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::Datelike::ordinal","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34541,"byte_end":34549,"line_start":917,"line_end":917,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::Datelike::ordinal0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34606,"byte_end":34613,"line_start":920,"line_end":920,"column_start":8,"column_end":15},"name":"weekday","qualname":"::Datelike::weekday","value":"fn (&self) -> Weekday","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34671,"byte_end":34679,"line_start":923,"line_end":923,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::Datelike::iso_week","value":"fn (&self) -> IsoWeek","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":34837,"byte_end":34846,"line_start":928,"line_end":928,"column_start":8,"column_end":17},"name":"with_year","qualname":"::Datelike::with_year","value":"fn (&self, year: i32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":35039,"byte_end":35049,"line_start":933,"line_end":933,"column_start":8,"column_end":18},"name":"with_month","qualname":"::Datelike::with_month","value":"fn (&self, month: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":35243,"byte_end":35254,"line_start":938,"line_end":938,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::Datelike::with_month0","value":"fn (&self, month0: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":35449,"byte_end":35457,"line_start":943,"line_end":943,"column_start":8,"column_end":16},"name":"with_day","qualname":"::Datelike::with_day","value":"fn (&self, day: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":35649,"byte_end":35658,"line_start":948,"line_end":948,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::Datelike::with_day0","value":"fn (&self, day0: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":35850,"byte_end":35862,"line_start":953,"line_end":953,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::Datelike::with_ordinal","value":"fn (&self, ordinal: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":36057,"byte_end":36070,"line_start":958,"line_end":958,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::Datelike::with_ordinal0","value":"fn (&self, ordinal0: u32) -> Option<Self>","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":36629,"byte_end":36645,"line_start":972,"line_end":972,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::Datelike::num_days_from_ce","value":"fn (&self) -> i32","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1808},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37303,"byte_end":37311,"line_start":991,"line_end":991,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37374,"byte_end":37378,"line_start":993,"line_end":993,"column_start":8,"column_end":12},"name":"hour","qualname":"::Timelike::hour","value":"fn (&self) -> u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37529,"byte_end":37535,"line_start":998,"line_end":998,"column_start":8,"column_end":14},"name":"hour12","qualname":"::Timelike::hour12","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37512,"byte_end":37521,"line_start":997,"line_end":997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37779,"byte_end":37785,"line_start":1008,"line_end":1008,"column_start":8,"column_end":14},"name":"minute","qualname":"::Timelike::minute","value":"fn (&self) -> u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37857,"byte_end":37863,"line_start":1011,"line_end":1011,"column_start":8,"column_end":14},"name":"second","qualname":"::Timelike::second","value":"fn (&self) -> u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":38106,"byte_end":38116,"line_start":1016,"line_end":1016,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::Timelike::nanosecond","value":"fn (&self) -> u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":38270,"byte_end":38279,"line_start":1021,"line_end":1021,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::Timelike::with_hour","value":"fn (&self, hour: u32) -> Option<Self>","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":38455,"byte_end":38466,"line_start":1026,"line_end":1026,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::Timelike::with_minute","value":"fn (&self, min: u32) -> Option<Self>","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":38753,"byte_end":38764,"line_start":1033,"line_end":1033,"column_start":8,"column_end":19},"name":"with_second","qualname":"::Timelike::with_second","value":"fn (&self, sec: u32) -> Option<Self>","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":39097,"byte_end":39112,"line_start":1040,"line_end":1040,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::Timelike::with_nanosecond","value":"fn (&self, nano: u32) -> Option<Self>","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":39241,"byte_end":39266,"line_start":1044,"line_end":1044,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::Timelike::num_seconds_from_midnight","value":"fn (&self) -> u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":39224,"byte_end":39233,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45791,"byte_end":45802,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":46983,"byte_end":46994,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50210,"byte_end":50221,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":65570,"byte_end":65581,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68138,"byte_end":68149,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68701,"byte_end":68712,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68781,"byte_end":68792,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":69286,"byte_end":69297,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70050,"byte_end":70059,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70247,"byte_end":70256,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70445,"byte_end":70458,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70654,"byte_end":70667,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70878,"byte_end":70886,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":71098,"byte_end":71106,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":74985,"byte_end":74990,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":75881,"byte_end":75886,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80152,"byte_end":80155,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81214,"byte_end":81217,"line_start":63,"line_end":63,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81701,"byte_end":81704,"line_start":79,"line_end":79,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81788,"byte_end":81791,"line_start":83,"line_end":83,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81895,"byte_end":81898,"line_start":87,"line_end":87,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":88153,"byte_end":88162,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":88939,"byte_end":88948,"line_start":144,"line_end":144,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":97341,"byte_end":97343,"line_start":281,"line_end":281,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":99377,"byte_end":99379,"line_start":366,"line_end":366,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":99923,"byte_end":99926,"line_start":382,"line_end":382,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":101799,"byte_end":101802,"line_start":463,"line_end":463,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":119507,"byte_end":119516,"line_start":129,"line_end":129,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":155807,"byte_end":155816,"line_start":1018,"line_end":1018,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":168148,"byte_end":168157,"line_start":1385,"line_end":1385,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":168376,"byte_end":168385,"line_start":1394,"line_end":1394,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":169800,"byte_end":169809,"line_start":1427,"line_end":1427,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":170028,"byte_end":170037,"line_start":1436,"line_end":1436,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":171293,"byte_end":171302,"line_start":1470,"line_end":1470,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":172295,"byte_end":172304,"line_start":1501,"line_end":1501,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":173563,"byte_end":173572,"line_start":1536,"line_end":1536,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":174162,"byte_end":174171,"line_start":1556,"line_end":1556,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178213,"byte_end":178222,"line_start":1664,"line_end":1664,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178488,"byte_end":178501,"line_start":1672,"line_end":1672,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178803,"byte_end":178819,"line_start":1684,"line_end":1684,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":179472,"byte_end":179481,"line_start":1707,"line_end":1707,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":204272,"byte_end":204279,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":206825,"byte_end":206832,"line_start":128,"line_end":128,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":215689,"byte_end":215698,"line_start":184,"line_end":184,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":239971,"byte_end":239980,"line_start":785,"line_end":785,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":247194,"byte_end":247203,"line_start":991,"line_end":991,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":250210,"byte_end":250219,"line_start":1056,"line_end":1056,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":250400,"byte_end":250409,"line_start":1065,"line_end":1065,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":253012,"byte_end":253021,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":253202,"byte_end":253211,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":255746,"byte_end":255755,"line_start":1193,"line_end":1193,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":257143,"byte_end":257152,"line_start":1230,"line_end":1230,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":259005,"byte_end":259014,"line_start":1280,"line_end":1280,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":259774,"byte_end":259783,"line_start":1303,"line_end":1303,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":264800,"byte_end":264809,"line_start":1427,"line_end":1427,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":265056,"byte_end":265072,"line_start":1437,"line_end":1437,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":265470,"byte_end":265479,"line_start":1452,"line_end":1452,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":280576,"byte_end":280589,"line_start":60,"line_end":60,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":307022,"byte_end":307035,"line_start":698,"line_end":698,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":318091,"byte_end":318104,"line_start":1016,"line_end":1016,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":324365,"byte_end":324378,"line_start":1189,"line_end":1189,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":326993,"byte_end":327006,"line_start":1251,"line_end":1251,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":327237,"byte_end":327250,"line_start":1260,"line_end":1260,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":329761,"byte_end":329774,"line_start":1321,"line_end":1321,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":330005,"byte_end":330018,"line_start":1330,"line_end":1330,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":331956,"byte_end":331969,"line_start":1383,"line_end":1383,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":333177,"byte_end":333190,"line_start":1419,"line_end":1419,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":334286,"byte_end":334299,"line_start":1450,"line_end":1450,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":335037,"byte_end":335050,"line_start":1472,"line_end":1472,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":342760,"byte_end":342773,"line_start":1680,"line_end":1680,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343039,"byte_end":343052,"line_start":1688,"line_end":1688,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343358,"byte_end":343378,"line_start":1700,"line_end":1700,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343793,"byte_end":343806,"line_start":1715,"line_end":1715,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":348609,"byte_end":348644,"line_start":1842,"line_end":1842,"column_start":40,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":354185,"byte_end":354221,"line_start":1987,"line_end":1987,"column_start":40,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":359632,"byte_end":359663,"line_start":2132,"line_end":2132,"column_start":40,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373737,"byte_end":373741,"line_start":54,"line_end":54,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381862,"byte_end":381866,"line_start":258,"line_end":258,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382708,"byte_end":382712,"line_start":277,"line_end":277,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384403,"byte_end":384407,"line_start":325,"line_end":325,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384487,"byte_end":384491,"line_start":326,"line_end":326,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384596,"byte_end":384600,"line_start":328,"line_end":328,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384708,"byte_end":384712,"line_start":332,"line_end":332,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384756,"byte_end":384760,"line_start":335,"line_end":335,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384912,"byte_end":384916,"line_start":341,"line_end":341,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385039,"byte_end":385043,"line_start":345,"line_end":345,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385170,"byte_end":385174,"line_start":349,"line_end":349,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385398,"byte_end":385402,"line_start":358,"line_end":358,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385623,"byte_end":385627,"line_start":367,"line_end":367,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385812,"byte_end":385816,"line_start":376,"line_end":376,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385990,"byte_end":385994,"line_start":382,"line_end":382,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":388518,"byte_end":388526,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394646,"byte_end":394654,"line_start":250,"line_end":250,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":395158,"byte_end":395166,"line_start":262,"line_end":262,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":395576,"byte_end":395584,"line_start":272,"line_end":272,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396034,"byte_end":396042,"line_start":284,"line_end":284,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396488,"byte_end":396496,"line_start":296,"line_end":296,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396932,"byte_end":396940,"line_start":308,"line_end":308,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":397659,"byte_end":397667,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400359,"byte_end":400367,"line_start":384,"line_end":384,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1076},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404879,"byte_end":404887,"line_start":493,"line_end":493,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":406600,"byte_end":406608,"line_start":540,"line_end":540,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407584,"byte_end":407592,"line_start":568,"line_end":568,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407672,"byte_end":407680,"line_start":569,"line_end":569,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407789,"byte_end":407797,"line_start":571,"line_end":571,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407917,"byte_end":407925,"line_start":575,"line_end":575,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407999,"byte_end":408007,"line_start":578,"line_end":578,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":408746,"byte_end":408754,"line_start":599,"line_end":599,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":408889,"byte_end":408897,"line_start":603,"line_end":603,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409028,"byte_end":409036,"line_start":607,"line_end":607,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409272,"byte_end":409280,"line_start":616,"line_end":616,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409517,"byte_end":409525,"line_start":625,"line_end":625,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409714,"byte_end":409722,"line_start":634,"line_end":634,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409896,"byte_end":409904,"line_start":640,"line_end":640,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410092,"byte_end":410100,"line_start":646,"line_end":646,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410324,"byte_end":410332,"line_start":655,"line_end":655,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410577,"byte_end":410585,"line_start":664,"line_end":664,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":411220,"byte_end":411228,"line_start":683,"line_end":683,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":411427,"byte_end":411437,"line_start":690,"line_end":690,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":425909,"byte_end":425936,"line_start":1078,"line_end":1078,"column_start":40,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":431617,"byte_end":431650,"line_start":1227,"line_end":1227,"column_start":40,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":436883,"byte_end":436911,"line_start":1369,"line_end":1369,"column_start":40,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":442620,"byte_end":442654,"line_start":1518,"line_end":1518,"column_start":40,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":447743,"byte_end":447766,"line_start":1660,"line_end":1660,"column_start":40,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":453080,"byte_end":453109,"line_start":1805,"line_end":1805,"column_start":40,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":453957,"byte_end":453965,"line_start":1830,"line_end":1830,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":454395,"byte_end":454408,"line_start":1842,"line_end":1842,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":454781,"byte_end":454796,"line_start":1855,"line_end":1855,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":455568,"byte_end":455576,"line_start":1877,"line_end":1877,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":456045,"byte_end":456053,"line_start":1891,"line_end":1891,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":456627,"byte_end":456635,"line_start":1907,"line_end":1907,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477088,"byte_end":477103,"line_start":132,"line_end":132,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477193,"byte_end":477208,"line_start":138,"line_end":138,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477314,"byte_end":477329,"line_start":144,"line_end":144,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477355,"byte_end":477370,"line_start":147,"line_end":147,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":484530,"byte_end":484540,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":485289,"byte_end":485299,"line_start":337,"line_end":337,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506172,"byte_end":506178,"line_start":125,"line_end":125,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506674,"byte_end":506680,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parse.rs","byte_start":584775,"byte_end":584783,"line_start":395,"line_end":395,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":619913,"byte_end":619926,"line_start":175,"line_end":175,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":620245,"byte_end":620258,"line_start":185,"line_end":185,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499582,"byte_end":499595,"line_start":631,"line_end":631,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":500431,"byte_end":500444,"line_start":647,"line_end":647,"column_start":77,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":501333,"byte_end":501340,"line_start":679,"line_end":679,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/round.rs","byte_start":636036,"byte_end":636037,"line_start":41,"line_end":41,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":23028,"byte_end":23038,"line_start":549,"line_end":549,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":23328,"byte_end":23338,"line_start":557,"line_end":557,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24410,"byte_end":24417,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":28408,"byte_end":28415,"line_start":703,"line_end":703,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":29063,"byte_end":29070,"line_start":720,"line_end":720,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30009,"byte_end":30026,"line_start":758,"line_end":758,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30388,"byte_end":30395,"line_start":772,"line_end":772,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30640,"byte_end":30654,"line_start":782,"line_end":782,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":31056,"byte_end":31063,"line_start":796,"line_end":796,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":20687,"byte_end":20693,"line_start":472,"line_end":472,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":21980,"byte_end":21986,"line_start":514,"line_end":514,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1389}},{"kind":"Mod","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":498888,"byte_end":498896,"line_start":613,"line_end":613,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1678}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":45791,"byte_end":45802,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":46983,"byte_end":46994,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50210,"byte_end":50221,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50683,"byte_end":50688,"line_start":183,"line_end":183,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50691,"byte_end":50696,"line_start":183,"line_end":183,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50704,"byte_end":50709,"line_start":183,"line_end":183,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":7573},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":50999,"byte_end":51004,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/mod.rs","byte_start":51007,"byte_end":51012,"line_start":192,"line_end":192,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":65570,"byte_end":65581,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68138,"byte_end":68149,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1853},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68701,"byte_end":68712,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1853},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":68781,"byte_end":68792,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":69286,"byte_end":69297,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70050,"byte_end":70059,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70247,"byte_end":70256,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70445,"byte_end":70458,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70654,"byte_end":70667,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":70878,"byte_end":70886,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/fixed.rs","byte_start":71098,"byte_end":71106,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":74985,"byte_end":74990,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/local.rs","byte_start":75881,"byte_end":75886,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1868},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":80152,"byte_end":80155,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81214,"byte_end":81217,"line_start":63,"line_end":63,"column_start":19,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1875},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81701,"byte_end":81704,"line_start":79,"line_end":79,"column_start":17,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1875},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81788,"byte_end":81791,"line_start":83,"line_end":83,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/offset/utc.rs","byte_start":81895,"byte_end":81898,"line_start":87,"line_end":87,"column_start":23,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":88153,"byte_end":88162,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":88939,"byte_end":88948,"line_start":144,"line_end":144,"column_start":21,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1886},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":97341,"byte_end":97343,"line_start":281,"line_end":281,"column_start":6,"column_end":8},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":99377,"byte_end":99379,"line_start":366,"line_end":366,"column_start":21,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":99923,"byte_end":99926,"line_start":382,"line_end":382,"column_start":6,"column_end":9},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/internals.rs","byte_start":101799,"byte_end":101802,"line_start":463,"line_end":463,"column_start":21,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1915},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":119507,"byte_end":119516,"line_start":129,"line_end":129,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":155807,"byte_end":155816,"line_start":1018,"line_end":1018,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":1789}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":168148,"byte_end":168157,"line_start":1385,"line_end":1385,"column_start":27,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":168376,"byte_end":168385,"line_start":1394,"line_end":1394,"column_start":33,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":169800,"byte_end":169809,"line_start":1427,"line_end":1427,"column_start":27,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":170028,"byte_end":170037,"line_start":1436,"line_end":1436,"column_start":33,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":1638}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":171293,"byte_end":171302,"line_start":1470,"line_end":1470,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":172295,"byte_end":172304,"line_start":1501,"line_end":1501,"column_start":21,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":173563,"byte_end":173572,"line_start":1536,"line_end":1536,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":174162,"byte_end":174171,"line_start":1556,"line_end":1556,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1931},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178213,"byte_end":178222,"line_start":1664,"line_end":1664,"column_start":29,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1931},"to":{"krate":19,"index":1645}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178488,"byte_end":178501,"line_start":1672,"line_end":1672,"column_start":54,"column_end":67},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":178803,"byte_end":178819,"line_start":1684,"line_end":1684,"column_start":36,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":482},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/date.rs","byte_start":179472,"byte_end":179481,"line_start":1707,"line_end":1707,"column_start":40,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1931},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":204272,"byte_end":204279,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/isoweek.rs","byte_start":206825,"byte_end":206832,"line_start":128,"line_end":128,"column_start":21,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1954},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":215689,"byte_end":215698,"line_start":184,"line_end":184,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":239971,"byte_end":239980,"line_start":785,"line_end":785,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1974},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":247194,"byte_end":247203,"line_start":991,"line_end":991,"column_start":21,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":7215}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":250210,"byte_end":250219,"line_start":1056,"line_end":1056,"column_start":27,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":250400,"byte_end":250409,"line_start":1065,"line_end":1065,"column_start":33,"column_end":42},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":253012,"byte_end":253021,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":253202,"byte_end":253211,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1638}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":255746,"byte_end":255755,"line_start":1193,"line_end":1193,"column_start":25,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":257143,"byte_end":257152,"line_start":1230,"line_end":1230,"column_start":21,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":259005,"byte_end":259014,"line_start":1280,"line_end":1280,"column_start":23,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":259774,"byte_end":259783,"line_start":1303,"line_end":1303,"column_start":23,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":264800,"byte_end":264809,"line_start":1427,"line_end":1427,"column_start":29,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1974},"to":{"krate":19,"index":1645}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":265056,"byte_end":265072,"line_start":1437,"line_end":1437,"column_start":36,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":601},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/time.rs","byte_start":265470,"byte_end":265479,"line_start":1452,"line_end":1452,"column_start":40,"column_end":49},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1974},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":280576,"byte_end":280589,"line_start":60,"line_end":60,"column_start":6,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":307022,"byte_end":307035,"line_start":698,"line_end":698,"column_start":19,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1999},"to":{"krate":0,"index":1789}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":318091,"byte_end":318104,"line_start":1016,"line_end":1016,"column_start":19,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1999},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":324365,"byte_end":324378,"line_start":1189,"line_end":1189,"column_start":21,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":7215}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":326993,"byte_end":327006,"line_start":1251,"line_end":1251,"column_start":27,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":327237,"byte_end":327250,"line_start":1260,"line_end":1260,"column_start":33,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":329761,"byte_end":329774,"line_start":1321,"line_end":1321,"column_start":27,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":330005,"byte_end":330018,"line_start":1330,"line_end":1330,"column_start":33,"column_end":46},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1638}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":331956,"byte_end":331969,"line_start":1383,"line_end":1383,"column_start":29,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":333177,"byte_end":333190,"line_start":1419,"line_end":1419,"column_start":21,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":334286,"byte_end":334299,"line_start":1450,"line_end":1450,"column_start":23,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":335037,"byte_end":335050,"line_start":1472,"line_end":1472,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":342760,"byte_end":342773,"line_start":1680,"line_end":1680,"column_start":29,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1999},"to":{"krate":19,"index":1645}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343039,"byte_end":343052,"line_start":1688,"line_end":1688,"column_start":54,"column_end":67},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":743},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343358,"byte_end":343378,"line_start":1700,"line_end":1700,"column_start":36,"column_end":56},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":751},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":343793,"byte_end":343806,"line_start":1715,"line_end":1715,"column_start":40,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1999},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":348609,"byte_end":348644,"line_start":1842,"line_end":1842,"column_start":40,"column_end":75},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":776},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":354185,"byte_end":354221,"line_start":1987,"line_end":1987,"column_start":40,"column_end":76},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":801},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/naive/datetime.rs","byte_start":359632,"byte_end":359663,"line_start":2132,"line_end":2132,"column_start":40,"column_end":71},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":826},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":373737,"byte_end":373741,"line_start":54,"line_end":54,"column_start":20,"column_end":24},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":381862,"byte_end":381866,"line_start":258,"line_end":258,"column_start":20,"column_end":24},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":382708,"byte_end":382712,"line_start":277,"line_end":277,"column_start":33,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2024},"to":{"krate":0,"index":1789}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384403,"byte_end":384407,"line_start":325,"line_end":325,"column_start":29,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":1548}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384487,"byte_end":384491,"line_start":326,"line_end":326,"column_start":36,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":1538}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384596,"byte_end":384600,"line_start":328,"line_end":328,"column_start":60,"column_end":64},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384708,"byte_end":384712,"line_start":332,"line_end":332,"column_start":27,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384756,"byte_end":384760,"line_start":335,"line_end":335,"column_start":35,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":2082}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":384912,"byte_end":384916,"line_start":341,"line_end":341,"column_start":28,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385039,"byte_end":385043,"line_start":345,"line_end":345,"column_start":35,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":7215}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385170,"byte_end":385174,"line_start":349,"line_end":349,"column_start":41,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385398,"byte_end":385402,"line_start":358,"line_end":358,"column_start":41,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385623,"byte_end":385627,"line_start":367,"line_end":367,"column_start":38,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385812,"byte_end":385816,"line_start":376,"line_end":376,"column_start":35,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/date.rs","byte_start":385990,"byte_end":385994,"line_start":382,"line_end":382,"column_start":37,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2024},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":388518,"byte_end":388526,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":394646,"byte_end":394654,"line_start":250,"line_end":250,"column_start":30,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":395158,"byte_end":395166,"line_start":262,"line_end":262,"column_start":30,"column_end":38},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":395576,"byte_end":395584,"line_start":272,"line_end":272,"column_start":38,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396034,"byte_end":396042,"line_start":284,"line_end":284,"column_start":38,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396488,"byte_end":396496,"line_start":296,"line_end":296,"column_start":32,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":396932,"byte_end":396940,"line_start":308,"line_end":308,"column_start":32,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":397659,"byte_end":397667,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":400359,"byte_end":400367,"line_start":384,"line_end":384,"column_start":20,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":404879,"byte_end":404887,"line_start":493,"line_end":493,"column_start":33,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2055},"to":{"krate":0,"index":1789}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":406600,"byte_end":406608,"line_start":540,"line_end":540,"column_start":33,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2055},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407584,"byte_end":407592,"line_start":568,"line_end":568,"column_start":29,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1548}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407672,"byte_end":407680,"line_start":569,"line_end":569,"column_start":36,"column_end":44},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1538}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407789,"byte_end":407797,"line_start":571,"line_end":571,"column_start":64,"column_end":72},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407917,"byte_end":407925,"line_start":575,"line_end":575,"column_start":27,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":407999,"byte_end":408007,"line_start":578,"line_end":578,"column_start":65,"column_end":73},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2082}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":408746,"byte_end":408754,"line_start":599,"line_end":599,"column_start":28,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":408889,"byte_end":408897,"line_start":603,"line_end":603,"column_start":35,"column_end":43},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":7215}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409028,"byte_end":409036,"line_start":607,"line_end":607,"column_start":41,"column_end":49},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409272,"byte_end":409280,"line_start":616,"line_end":616,"column_start":41,"column_end":49},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409517,"byte_end":409525,"line_start":625,"line_end":625,"column_start":42,"column_end":50},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409714,"byte_end":409722,"line_start":634,"line_end":634,"column_start":35,"column_end":43},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":409896,"byte_end":409904,"line_start":640,"line_end":640,"column_start":37,"column_end":45},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410092,"byte_end":410100,"line_start":646,"line_end":646,"column_start":23,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410324,"byte_end":410332,"line_start":655,"line_end":655,"column_start":23,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":410577,"byte_end":410585,"line_start":664,"line_end":664,"column_start":27,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":411220,"byte_end":411228,"line_start":683,"line_end":683,"column_start":27,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":411427,"byte_end":411437,"line_start":690,"line_end":690,"column_start":43,"column_end":53},"kind":{"Impl":{"id":118}},"from":{"krate":1,"index":7659},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":425909,"byte_end":425936,"line_start":1078,"line_end":1078,"column_start":40,"column_end":67},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2066},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":431617,"byte_end":431650,"line_start":1227,"line_end":1227,"column_start":40,"column_end":73},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1236},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":436883,"byte_end":436911,"line_start":1369,"line_end":1369,"column_start":40,"column_end":68},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2070},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":442620,"byte_end":442654,"line_start":1518,"line_end":1518,"column_start":40,"column_end":74},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1291},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":447743,"byte_end":447766,"line_start":1660,"line_end":1660,"column_start":40,"column_end":63},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2062},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":453080,"byte_end":453109,"line_start":1805,"line_end":1805,"column_start":40,"column_end":69},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1343},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":453957,"byte_end":453965,"line_start":1830,"line_end":1830,"column_start":43,"column_end":51},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2055},"to":{"krate":19,"index":1645}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":454395,"byte_end":454408,"line_start":1842,"line_end":1842,"column_start":54,"column_end":67},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":454781,"byte_end":454796,"line_start":1855,"line_end":1855,"column_start":36,"column_end":51},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1366},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":455568,"byte_end":455576,"line_start":1877,"line_end":1877,"column_start":40,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2055},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":456045,"byte_end":456053,"line_start":1891,"line_end":1891,"column_start":40,"column_end":48},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2055},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/datetime.rs","byte_start":456627,"byte_end":456635,"line_start":1907,"line_end":1907,"column_start":40,"column_end":48},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2055},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477088,"byte_end":477103,"line_start":132,"line_end":132,"column_start":16,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2185}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477193,"byte_end":477208,"line_start":138,"line_end":138,"column_start":20,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477314,"byte_end":477329,"line_start":144,"line_end":144,"column_start":13,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":477355,"byte_end":477370,"line_start":147,"line_end":147,"column_start":21,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":484530,"byte_end":484540,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2277},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":485289,"byte_end":485299,"line_start":337,"line_end":337,"column_start":16,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2277},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506172,"byte_end":506178,"line_start":125,"line_end":125,"column_start":18,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parsed.rs","byte_start":506674,"byte_end":506680,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/parse.rs","byte_start":584775,"byte_end":584783,"line_start":395,"line_end":395,"column_start":23,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":619913,"byte_end":619926,"line_start":175,"line_end":175,"column_start":10,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/strftime.rs","byte_start":620245,"byte_end":620258,"line_start":185,"line_end":185,"column_start":23,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":499582,"byte_end":499595,"line_start":631,"line_end":631,"column_start":60,"column_end":73},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":500431,"byte_end":500444,"line_start":647,"line_end":647,"column_start":77,"column_end":90},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2368},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/format/mod.rs","byte_start":501333,"byte_end":501340,"line_start":679,"line_end":679,"column_start":18,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2377},"to":{"krate":2,"index":6751}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/round.rs","byte_start":636036,"byte_end":636037,"line_start":41,"line_end":41,"column_start":25,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1727},"to":{"krate":0,"index":1723}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":23028,"byte_end":23038,"line_start":549,"line_end":549,"column_start":55,"column_end":65},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":23328,"byte_end":23338,"line_start":557,"line_end":557,"column_start":57,"column_end":67},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1733},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":24410,"byte_end":24417,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":28408,"byte_end":28415,"line_start":703,"line_end":703,"column_start":23,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2377},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":29063,"byte_end":29070,"line_start":720,"line_end":720,"column_start":36,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2377},"to":{"krate":18,"index":152}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30009,"byte_end":30026,"line_start":758,"line_end":758,"column_start":21,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2413},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30388,"byte_end":30395,"line_start":772,"line_end":772,"column_start":29,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2377},"to":{"krate":19,"index":1645}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":30640,"byte_end":30654,"line_start":782,"line_end":782,"column_start":36,"column_end":50},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1776},"to":{"krate":19,"index":1284}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":31056,"byte_end":31063,"line_start":796,"line_end":796,"column_start":40,"column_end":47},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2377},"to":{"krate":19,"index":1200}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":33077,"byte_end":33082,"line_start":873,"line_end":873,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1789}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.11/src/lib.rs","byte_start":37313,"byte_end":37318,"line_start":991,"line_end":991,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1808}}]}