{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2","program":"/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","hex","/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b1aedd06ca846e25","-C","extra-filename=-b1aedd06ca846e25","--out-dir","/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","-L","dependency=/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/zhihua/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/86719/Coding/archival_node/target/rls/debug/deps/libhex-b1aedd06ca846e25.rmeta"},"prelude":{"crate_id":{"name":"hex","disambiguator":[4587629479877905629,13331699259664038865]},"crate_root":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src","external_crates":[{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}}],"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":411,"byte_end":13961,"line_start":9,"line_end":485,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1208,"byte_end":1220,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"alias_span":null,"name":"FromHexError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":411,"byte_end":13961,"line_start":9,"line_end":485,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":98},{"krate":0,"index":104},{"krate":0,"index":110},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":194},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":248},{"krate":0,"index":254},{"krate":0,"index":260},{"krate":0,"index":266},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":314},{"krate":0,"index":320},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":368},{"krate":0,"index":374},{"krate":0,"index":380},{"krate":0,"index":386},{"krate":0,"index":392},{"krate":0,"index":398},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":440},{"krate":0,"index":446},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":464},{"krate":0,"index":470},{"krate":0,"index":476},{"krate":0,"index":482},{"krate":0,"index":488},{"krate":0,"index":494},{"krate":0,"index":500},{"krate":0,"index":506},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":524},{"krate":0,"index":530},{"krate":0,"index":536},{"krate":0,"index":542},{"krate":0,"index":548},{"krate":0,"index":554},{"krate":0,"index":560},{"krate":0,"index":566},{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":584},{"krate":0,"index":590},{"krate":0,"index":596},{"krate":0,"index":602},{"krate":0,"index":608},{"krate":0,"index":614},{"krate":0,"index":620},{"krate":0,"index":626},{"krate":0,"index":632},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":656},{"krate":0,"index":662},{"krate":0,"index":668},{"krate":0,"index":674},{"krate":0,"index":680},{"krate":0,"index":686},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":704},{"krate":0,"index":710},{"krate":0,"index":716},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":734},{"krate":0,"index":740},{"krate":0,"index":746},{"krate":0,"index":752},{"krate":0,"index":758},{"krate":0,"index":764},{"krate":0,"index":770},{"krate":0,"index":776},{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":794},{"krate":0,"index":800},{"krate":0,"index":806},{"krate":0,"index":812},{"krate":0,"index":818},{"krate":0,"index":824},{"krate":0,"index":830},{"krate":0,"index":836},{"krate":0,"index":842},{"krate":0,"index":848},{"krate":0,"index":854},{"krate":0,"index":860},{"krate":0,"index":866},{"krate":0,"index":872},{"krate":0,"index":878},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":896},{"krate":0,"index":902},{"krate":0,"index":908},{"krate":0,"index":914},{"krate":0,"index":920},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":938},{"krate":0,"index":944},{"krate":0,"index":950},{"krate":0,"index":956},{"krate":0,"index":962},{"krate":0,"index":968},{"krate":0,"index":974},{"krate":0,"index":980},{"krate":0,"index":986},{"krate":0,"index":992},{"krate":0,"index":998},{"krate":0,"index":1004},{"krate":0,"index":1010},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1028},{"krate":0,"index":1034},{"krate":0,"index":1040},{"krate":0,"index":1046},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" Encoding and decoding hex strings.","sig":null,"attributes":[{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1001,"byte_end":1038,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":82},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14215,"byte_end":14234,"line_start":8,"line_end":8,"column_start":5,"column_end":24},"name":"InvalidHexCharacter","qualname":"::error::FromHexError::InvalidHexCharacter","value":"FromHexError::InvalidHexCharacter { c, index }","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" An invalid character was found. Valid ones are: `0...9`, `a...f`\n or `A...F`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14361,"byte_end":14370,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"OddLength","qualname":"::error::FromHexError::OddLength","value":"FromHexError::OddLength","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" A hex string's length needs to be even, as two digits correspond to\n one byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":87},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14543,"byte_end":14562,"line_start":17,"line_end":17,"column_start":5,"column_end":24},"name":"InvalidStringLength","qualname":"::error::FromHexError::InvalidStringLength","value":"FromHexError::InvalidStringLength","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" If the hex string is decoded into a fixed sized container, such as an\n array, the hex string's length * 2 has to match the container's\n length.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":81},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14103,"byte_end":14115,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::error::FromHexError","value":"FromHexError::{InvalidHexCharacter, OddLength, InvalidStringLength}","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":87}],"decl_id":null,"docs":" The error type for decoding a hex string into `Vec<u8>` or `[u8; N]`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1883,"byte_end":1888,"line_start":61,"line_end":61,"column_start":11,"column_end":16},"name":"ToHex","qualname":"::ToHex","value":"ToHex","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22}],"decl_id":null,"docs":" Encoding values as hex string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2018,"byte_end":2028,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"encode_hex","qualname":"::ToHex::encode_hex","value":"fn <T> (&self) -> T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Encode the hex strict representing `self` into the result.. Lower case\n letters are used (e.g. `f9b4ca`)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2199,"byte_end":2215,"line_start":68,"line_end":68,"column_start":8,"column_end":24},"name":"encode_hex_upper","qualname":"::ToHex::encode_hex_upper","value":"fn <T> (&self) -> T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Encode the hex strict representing `self` into the result.. Lower case\n letters are used (e.g. `F9B4CA`)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4406,"byte_end":4413,"line_start":154,"line_end":154,"column_start":11,"column_end":18},"name":"FromHex","qualname":"::FromHex","value":"FromHex: Sized","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Types that can be decoded from a hex string.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4432,"byte_end":4437,"line_start":155,"line_end":155,"column_start":10,"column_end":15},"name":"Error","qualname":"::FromHex::Error","value":"type Error;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4716,"byte_end":4724,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::FromHex::from_hex","value":"fn <T> (hex: T) -> Result<Self, Self::Error>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Creates an instance of type `Self` from the given hex string, or fails\n with a custom error type.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":7385,"byte_end":7391,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using lowercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":7790,"byte_end":7802,"line_start":260,"line_end":260,"column_start":8,"column_end":20},"name":"encode_upper","qualname":"::encode_upper","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using uppercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":8361,"byte_end":8367,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn <T> (data: T) -> Result<Vec<u8>, FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a hex string into raw bytes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":8866,"byte_end":8881,"line_start":296,"line_end":296,"column_start":8,"column_end":23},"name":"decode_to_slice","qualname":"::decode_to_slice","value":"fn <T> (data: T, out: &mut [u8]) -> Result<(), FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a hex string into a mutable bytes slice.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":10178,"byte_end":10193,"line_start":348,"line_end":348,"column_start":8,"column_end":23},"name":"encode_to_slice","qualname":"::encode_to_slice","value":"fn <T> (input: T, output: &mut [u8]) -> Result<(), FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes some bytes into a mutable slice of bytes.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14618,"byte_end":14630,"line_start":21,"line_end":21,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14657,"byte_end":14669,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2509,"byte_end":2524,"line_start":80,"line_end":80,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2753,"byte_end":2768,"line_start":90,"line_end":90,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":110,"line_end":110,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3710,"byte_end":3711,"line_start":124,"line_end":124,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":5114,"byte_end":5117,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14618,"byte_end":14630,"line_start":21,"line_end":21,"column_start":28,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14657,"byte_end":14669,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2509,"byte_end":2524,"line_start":80,"line_end":80,"column_start":10,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2753,"byte_end":2768,"line_start":90,"line_end":90,"column_start":23,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3602}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":110,"line_end":110,"column_start":38,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3888}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3710,"byte_end":3711,"line_start":124,"line_end":124,"column_start":32,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":51},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4415,"byte_end":4420,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/zhihua/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":5114,"byte_end":5117,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3822},"to":{"krate":0,"index":56}}]}